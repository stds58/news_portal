
#+ === Добавьте постраничный вывод на /news/, чтобы на одной странице было не больше 10 новостей
#+проверить на больших данных!+ === и были видны номера лишь ближайших страниц, а также возможность перехода к первой или последней странице.

# Добавьте страницу /news/search. На ней должна быть реализована возможность искать новости по определённым критериям.
# Критерии должны быть следующие:
#+ === по названию
#+ === по имени автора
#+позже указываемой даты

# Запрограммируйте страницы создания, редактирования и удаления новостей и статей. Предлагаем вам расположить страницы по следующим ссылкам:
#+добавить переходы на страницу добавления,изменения,удаления
#+показывать имена полей,а не ключи из других таблиц
#+/news/create/
#+/news/<int:pk>/edit/
#+/news/<int:pk>/delete/
#+/articles/create/
#+/articles/<int:pk>/edit/
#+/articles/<int:pk>/delete/

#-----------------------------------------


# ?1  В классе-представлении редактирования профиля добавить проверку аутентификации.
# +2  Выполнить необходимые настройки пакета allauth в файле конфигурации.
# ?3  В файле конфигурации определить адрес для перенаправления на страницу входа в систему и адрес перенаправления после успешного входа.
# ?4  Реализовать шаблон с формой входа в систему и выполнить настройку конфигурации URL.
# +5  Реализовать шаблон страницы регистрации пользователей.
# +6  Реализовать возможность регистрации через Google-аккаунт.
# +7  Создать группы common и authors.
# +8  Реализовать автоматическое добавление новых пользователей в группу common.
# +9  Создать возможность стать автором (быть добавленным в группу authors).
# 10 Для группы authors предоставить права создания и редактирования объектов модели Post (новостей и статей).
# 11 В классах-представлениях добавления и редактирования новостей и статей добавить проверку прав доступа.
# 12 Исходный код залить в git-репозиторий.


